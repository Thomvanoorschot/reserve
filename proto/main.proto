syntax = "proto3";
import "availability.proto";
import "tenant.proto";
import "reservation.proto";
import "location.proto";

package proto;

option go_package = "./proto";

message Empty { }

service AvailabilityService {
  rpc UpdateLocationDefaultAvailability(UpdateLocationDefaultAvailabilityRequest) returns (UpdateLocationDefaultAvailabilityResponse);
  rpc GetAvailableTimeslots(GetAvailableTimeslotsRequest) returns (GetAvailableTimeslotsResponse);
  rpc GetAvailableDays(GetAvailableDaysRequest) returns (GetAvailableDaysResponse);
  rpc UpsertAvailabilityOverride(UpsertAvailabilityOverrideRequest) returns (UpsertAvailabilityOverrideResponse);
}

service LocationService {
  rpc UpsertLocation(UpsertLocationRequest) returns (UpsertLocationResponse);
}

service ReservationService {
  rpc UpsertReservation(UpsertReservationRequest) returns (UpsertReservationResponse);
}

service TenantService {
  rpc RegisterTenant(RegisterTenantRequest) returns (stream RegisterTenantResponse);
}

message TestRPCRequest {
  string testField = 1;
}

message TestRPCResponse {
 string testField = 1;
}

service TestService {
  rpc TestUnaryRPC(TestRPCRequest) returns (TestRPCResponse);
}