//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var ResourceOverride = newResourceOverrideTable("", "resource_override", "")

type resourceOverrideTable struct {
	sqlite.Table

	// Columns
	ID            sqlite.ColumnInteger
	StartAt       sqlite.ColumnTimestamp
	EndAt         sqlite.ColumnTimestamp
	Availability1 sqlite.ColumnInteger
	Availability2 sqlite.ColumnInteger
	ResourceID    sqlite.ColumnInteger

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type ResourceOverrideTable struct {
	resourceOverrideTable

	EXCLUDED resourceOverrideTable
}

// AS creates new ResourceOverrideTable with assigned alias
func (a ResourceOverrideTable) AS(alias string) *ResourceOverrideTable {
	return newResourceOverrideTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ResourceOverrideTable with assigned schema name
func (a ResourceOverrideTable) FromSchema(schemaName string) *ResourceOverrideTable {
	return newResourceOverrideTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ResourceOverrideTable with assigned table prefix
func (a ResourceOverrideTable) WithPrefix(prefix string) *ResourceOverrideTable {
	return newResourceOverrideTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ResourceOverrideTable with assigned table suffix
func (a ResourceOverrideTable) WithSuffix(suffix string) *ResourceOverrideTable {
	return newResourceOverrideTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newResourceOverrideTable(schemaName, tableName, alias string) *ResourceOverrideTable {
	return &ResourceOverrideTable{
		resourceOverrideTable: newResourceOverrideTableImpl(schemaName, tableName, alias),
		EXCLUDED:              newResourceOverrideTableImpl("", "excluded", ""),
	}
}

func newResourceOverrideTableImpl(schemaName, tableName, alias string) resourceOverrideTable {
	var (
		IDColumn            = sqlite.IntegerColumn("id")
		StartAtColumn       = sqlite.TimestampColumn("start_at")
		EndAtColumn         = sqlite.TimestampColumn("end_at")
		Availability1Column = sqlite.IntegerColumn("availability_1")
		Availability2Column = sqlite.IntegerColumn("availability_2")
		ResourceIDColumn    = sqlite.IntegerColumn("resource_id")
		allColumns          = sqlite.ColumnList{IDColumn, StartAtColumn, EndAtColumn, Availability1Column, Availability2Column, ResourceIDColumn}
		mutableColumns      = sqlite.ColumnList{StartAtColumn, EndAtColumn, Availability1Column, Availability2Column, ResourceIDColumn}
	)

	return resourceOverrideTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:            IDColumn,
		StartAt:       StartAtColumn,
		EndAt:         EndAtColumn,
		Availability1: Availability1Column,
		Availability2: Availability2Column,
		ResourceID:    ResourceIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
